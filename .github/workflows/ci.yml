name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  OTP_VERSION: '24.2'
  ELIXIR_VERSION: '1.12.3'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image for production
        working-directory: docker
        run: |
          make build-prod
          make push

  test_block_scout_web:
    name: Blockscout Web Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: explorer_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: "Install Rust"
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: "ELIXIR_VERSION.lock"
        run: echo "${ELIXIR_VERSION}" > ELIXIR_VERSION.lock

      - name: "OTP_VERSION.lock"
        run: echo "${OTP_VERSION}" > OTP_VERSION.lock

      - name: Build Mix deps
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix deps.compile
          cd deps/libsecp256k1
          make

      - name: Build Explorer NPM
        run: npm install
        working-directory: apps/explorer

      - name: Build Blockscout Web NPM
        run: npm install
        working-directory: apps/block_scout_web/assets

      - name: Build assets
        run: node node_modules/webpack/bin/webpack.js --mode development
        working-directory: "apps/block_scout_web/assets"

      - name: Install DB (only for act local execution)
        if: ${{ env.ACT }}
        run: |
          sudo apt-get update
          printf '#!/bin/sh\nexit 0' > /usr/sbin/policy-rc.d
          sudo apt-get -yqq install postgresql postgresql-contrib

      - name: Start DB (only for act local execution)
        if: ${{ env.ACT }}
        run: |
          sudo service postgresql start
          sudo -u postgres createdb explorer_test
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"

      - name: Install Chrome Headless
        run: ./bin/install_chrome_headless.sh

      - name: Tests
        run: |
          mix ecto.create --quiet
          mix ecto.migrate
          cd apps/block_scout_web
          mix compile
          mix test --no-start --exclude no_parity
        env:
          PGPASSWORD: postgres
          PGUSER: postgres
          ETHEREUM_JSONRPC_CASE: "EthereumJSONRPC.Case.Parity.Mox"
          ETHEREUM_JSONRPC_WEB_SOCKET_CASE: "EthereumJSONRPC.WebSocket.Case.Mox"
          CHAIN_ID: "77"
          ADMIN_PANEL_ENABLED: "true"
